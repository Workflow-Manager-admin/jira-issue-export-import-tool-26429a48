{"is_source_file": true, "format": "Python", "description": "Main FastAPI application module for Jira Issue Export/Import Tool API, defining endpoints for user authentication, project management, issue types, and health checks.", "external_files": ["../database", "../schemas", "../auth_service", "../models", "../jira_service"], "external_methods": ["get_db", "create_tables", "AuthService.authenticate_user", "AuthService.get_session", "AuthService.refresh_session", "AuthService.invalidate_session", "AuthService.get_jira_service"], "published": [], "classes": [{"name": "AuthRequest", "description": "Schema for authentication request body containing Jira credentials"}, {"name": "AuthResponse", "description": "Schema for authentication response with session token"}, {"name": "ProjectListResponse", "description": "Schema for listing multiple projects"}, {"name": "ProjectResponse", "description": "Schema for detailed project information"}, {"name": "IssueTypeListResponse", "description": "Schema for listing multiple issue types"}, {"name": "IssueTypeResponse", "description": "Schema for detailed issue type information"}, {"name": "SessionInfo", "description": "Schema providing session metadata"}, {"name": "ErrorResponse", "description": "Schema for error responses"}, {"name": "UserSession", "description": "Model representing an active user session"}, {"name": "Project", "description": "Model representing a Jira project"}, {"name": "IssueType", "description": "Model representing an issue type in Jira"}], "methods": [{"name": "UserSession get_current_session( credentials: HTTPAuthorizationCredentials = Depends(security), db: Session = Depends(get_db) )", "description": "Dependency to retrieve current user session via authorization", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Endpoint for health status check", "scope": "", "scopeKind": ""}, {"name": "login(auth_request: AuthRequest, db: Session = Depends(get_db))", "description": "Endpoint to authenticate user with Jira credentials and create a session", "scope": "", "scopeKind": ""}, {"name": "refresh_session( current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )", "description": "Endpoint to refresh current user session", "scope": "", "scopeKind": ""}, {"name": "logout( current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )", "description": "Endpoint to invalidate current user session", "scope": "", "scopeKind": ""}, {"name": "get_session_info(current_session: UserSession = Depends(get_current_session))", "description": "Retrieve info about current user session", "scope": "", "scopeKind": ""}, {"name": "get_projects( current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )", "description": "Retrieve all accessible Jira projects and store/update in database", "scope": "", "scopeKind": ""}, {"name": "get_project_details( project_key: str, current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )", "description": "Retrieve detailed info about a specific project", "scope": "", "scopeKind": ""}, {"name": "get_project_issue_types( project_key: str, current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )", "description": "Fetch and store/update issue types for a specific project from Jira", "scope": "", "scopeKind": ""}, {"name": "cleanup_expired_sessions(db: Session = Depends(get_db))", "description": "Admin endpoint to clean up expired user sessions", "scope": "", "scopeKind": ""}, {"name": "startup_event()", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["auth_service.get_session", "auth_service.authenticate_user", "auth_service.refresh_session", "auth_service.invalidate_session", "auth_service.get_jira_service", "create_tables", "get_db", "logger.info", "logger.error"], "search-terms": ["FastAPI main app", "Jira authentication", "project endpoints", "issue types retrieval", "session management", "CORS middleware", "startup event", "admin cleanup"], "state": 2, "file_id": 3, "knowledge_revision": 20, "git_revision": "8737474c86dd089214b6437877f541fe859bcfa4", "revision_history": [{"9": "8737474c86dd089214b6437877f541fe859bcfa4"}, {"20": "8737474c86dd089214b6437877f541fe859bcfa4"}], "ctags": [{"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "auth_service", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^auth_service = AuthService()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "cleanup_expired_sessions", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def cleanup_expired_sessions(db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_current_session", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^def get_current_session($/", "language": "Python", "typeref": "typename:UserSession", "kind": "function", "signature": "( credentials: HTTPAuthorizationCredentials = Depends(security), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_project_details", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def get_project_details($/", "language": "Python", "kind": "function", "signature": "( project_key: str, current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_project_issue_types", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def get_project_issue_types($/", "language": "Python", "kind": "function", "signature": "( project_key: str, current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_projects", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def get_projects($/", "language": "Python", "kind": "function", "signature": "( current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_session_info", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def get_session_info(current_session: UserSession = Depends(get_current_session)):$/", "language": "Python", "kind": "function", "signature": "(current_session: UserSession = Depends(get_current_session))"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def login(auth_request: AuthRequest, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(auth_request: AuthRequest, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "logout", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def logout($/", "language": "Python", "kind": "function", "signature": "( current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "refresh_session", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def refresh_session($/", "language": "Python", "kind": "function", "signature": "( current_session: UserSession = Depends(get_current_session), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "security", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^security = HTTPBearer()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "startup_event", "path": "/home/kavia/workspace/code-generation/jira-issue-export-import-tool-26429a48/jira_syncer_backend/src/api/main.py", "pattern": "/^async def startup_event():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "c8cd5e29a4a1859e1e6e7af17bf1c801", "format-version": 4, "code-base-name": "jira_syncer_backend", "filename": "jira_syncer_backend/src/api/main.py", "fields": [{"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "auth_service = AuthService()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "security = HTTPBearer()", "scope": "", "scopeKind": "", "description": "unavailable"}]}